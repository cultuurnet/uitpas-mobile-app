{
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2019,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "plugins": [
    "@typescript-eslint/eslint-plugin",
    "react-hooks",
    "typescript-sort-keys",
    "sort-keys-fix",
    "simple-import-sort"
  ],
  "extends": [
    "@react-native",
    "eslint:recommended",
    "eslint-config-prettier",
    "plugin:import/warnings",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "rules": {
    "import/order": 1,
    "import/no-named-as-default": 0,
    "no-console": 2,
    "react-hooks/rules-of-hooks": 2,
    "react-hooks/exhaustive-deps": 2,
    "react/prop-types": 0,
    "react/no-unstable-nested-components": 0,
    "react-native/no-inline-styles": 0,
    "@typescript-eslint/no-shadow": 0,
    "@typescript-eslint/explicit-function-return-type": 0,
    "@typescript-eslint/explicit-module-boundary-types": 0,
    "@typescript-eslint/interface-name-prefix": 0,
    "@typescript-eslint/no-empty-function": 0,
    "typescript-sort-keys/interface": 1,
    "typescript-sort-keys/string-enum": 1,
    "react/jsx-sort-props": 1,
    "sort-keys-fix/sort-keys-fix": 1,
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/camelcase": 0,
    "react/display-name": 0,
    "react/jsx-uses-react": "off",
    "react/react-in-jsx-scope": "off",
    "strict": [
      "error",
      "never"
    ],
    "simple-import-sort/imports": [
      "error",
      {
        "groups": [
          // Packages. `react` related packages come first.
          [
            "^react",
            "^@?\\w"
          ],
          // Absolute imports and other imports such as Vue-style `@/foo`.
          // Anything not matched in another group.
          [
            "^"
          ],
          // Relative imports.
          // Anything that starts with a dot.
          [
            "^\\."
          ],
          // Side effect imports.
          [
            "^\\u0000"
          ]
        ]
      }
    ],
    "no-restricted-imports": [
      "error",
      {
        "paths": [
          {
            "name": "styled-components",
            "message": "Please use styled-components/native instead."
          }
        ]
      }
    ]
  },
  "env": {
    "browser": false
  },
  "overrides": [
    {
      "files": "**/*.+(ts|tsx)",
      "parserOptions": {
        "project": "./tsconfig.json"
      }
    }
  ]
}
