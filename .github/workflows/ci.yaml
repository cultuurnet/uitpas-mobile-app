name: CI

on:
  pull_request_review:
    types: [submitted]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout
      - uses: actions/setup-node@v3
        name: Setup Node
        with:
          node-version-file: .nvmrc
          cache: yarn
      - name: Install modules
        run: yarn install --frozen-lockfile
      - name: Run ESLint
        run: yarn run lint --fix

  build_android:
    if: github.event.review.state == 'approved'
    runs-on: macos-12
    name: Build Android
    environment: debug
    steps:
      - uses: actions/checkout@v3
        name: Checkout

      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
          cache: gradle

      - uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - uses: nyaa8/package-version@v1
        name: Fetch current version

      - name: Create .env file
        run: |
          touch .env
          echo NODE_ENV=beta >> .env
          echo REACT_NATIVE_APP_AUTH0_DOMAIN="${{ secrets.AUTH0_DOMAIN }}" >> .env
          echo REACT_NATIVE_APP_AUTH0_SCHEME="${{ secrets.AUTH0_SCHEME }}" >> .env
          echo REACT_NATIVE_APP_AUTH0_CLIENT_ID="${{ secrets.AUTH0_CLIENT_ID }}" >> .env
          echo REACT_NATIVE_APP_ENCRYPTION_KEY="${{ secrets.ENCRYPTION_KEY }}" >> .env
          echo API_HOST="${{ secrets.API_HOST }}" >> .env
          echo APP_NAME="${{ secrets.APP_NAME }}" >> .env
          echo REACT_NATIVE_APP_VERSION_NR="${{ env.PACKAGE_VERSION }}" >> .env
          cat .env

      - name: Make Gradlew Executable
        run: cd android && chmod +x ./gradlew

      - name: Build Android App Bundle
        run: |
          cd android && ./gradlew bundleRelease --no-daemon

  build_ios:
    if: github.event.review.state == 'approved'
    runs-on: macos-12
    name: Build iOS
    environment: debug
    steps:
      - uses: actions/checkout@v3
        name: Checkout

      - uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Setup Ruby (bundle)
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Restore Pods cache
        uses: actions/cache@v3
        with:
          path: |
            ios/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install Pods
        working-directory: ios
        run: pod install

      - uses: nyaa8/package-version@v1
        name: Fetch current version

      - name: Create .env file
        run: |
          touch .env
          echo NODE_ENV=beta >> .env
          echo REACT_NATIVE_APP_AUTH0_DOMAIN="${{ secrets.AUTH0_DOMAIN }}" >> .env
          echo REACT_NATIVE_APP_AUTH0_SCHEME="${{ secrets.AUTH0_SCHEME }}" >> .env
          echo REACT_NATIVE_APP_AUTH0_CLIENT_ID="${{ secrets.AUTH0_CLIENT_ID }}" >> .env
          echo REACT_NATIVE_APP_ENCRYPTION_KEY="${{ secrets.ENCRYPTION_KEY }}" >> .env
          echo API_HOST="${{ secrets.API_HOST }}" >> .env
          echo APP_NAME="${{ secrets.APP_NAME }}" >> .env
          echo REACT_NATIVE_APP_VERSION_NR="${{ env.PACKAGE_VERSION }}" >> .env
          cat .env

      - name: Build iOS (debug)
        run: "xcodebuild \
          -workspace ios/reactnative_uitpas.xcworkspace \
          -scheme reactnative_uitpas \
          clean archive \
          -sdk iphoneos \
          -configuration Debug \
          -UseModernBuildSystem=NO \
          -archivePath $PWD/reactnative_uitpas \
          CODE_SIGNING_ALLOWED=NO"
